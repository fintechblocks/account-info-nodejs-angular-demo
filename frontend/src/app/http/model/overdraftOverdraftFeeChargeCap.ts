/**
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * OpenAPI spec version: v3.1.0
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { OverdraftOtherFeeType } from './overdraftOtherFeeType';


/**
 * Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.
 */
export interface OverdraftOverdraftFeeChargeCap {
    /**
     * Fee/charge type which is being capped
     */
    FeeType: Array<OverdraftOverdraftFeeChargeCap.FeeTypeEnum>;
    /**
     * Min Max type
     */
    MinMaxType: OverdraftOverdraftFeeChargeCap.MinMaxTypeEnum;
    /**
     * Indicates whether the advertised overdraft rate is guaranteed to be offered to a borrower by the bank e.g. if it’s part of a government scheme, or whether the rate may vary dependent on the applicant’s circumstances.
     */
    FeeCapOccurrence?: number;
    /**
     * Cap amount charged for a fee/charge
     */
    FeeCapAmount?: string;
    /**
     * Period e.g. day, week, month etc. for which the fee/charge is capped
     */
    CappingPeriod?: OverdraftOverdraftFeeChargeCap.CappingPeriodEnum;
    /**
     * Notes related to Overdraft fee charge cap
     */
    Notes?: Array<string>;
    /**
     * Other fee type code which is not available in the standard code set
     */
    OtherFeeType?: Array<OverdraftOtherFeeType>;
}
export namespace OverdraftOverdraftFeeChargeCap {
    export type FeeTypeEnum = 'ArrangedOverdraft' | 'AnnualReview' | 'EmergencyBorrowing' | 'BorrowingItem' | 'OverdraftRenewal' | 'OverdraftSetup' | 'Surcharge' | 'TempOverdraft' | 'UnauthorisedBorrowing' | 'UnauthorisedPaidTrans' | 'Other' | 'UnauthorisedUnpaidTrans';
    export const FeeTypeEnum = {
        ArrangedOverdraft: 'ArrangedOverdraft' as FeeTypeEnum,
        AnnualReview: 'AnnualReview' as FeeTypeEnum,
        EmergencyBorrowing: 'EmergencyBorrowing' as FeeTypeEnum,
        BorrowingItem: 'BorrowingItem' as FeeTypeEnum,
        OverdraftRenewal: 'OverdraftRenewal' as FeeTypeEnum,
        OverdraftSetup: 'OverdraftSetup' as FeeTypeEnum,
        Surcharge: 'Surcharge' as FeeTypeEnum,
        TempOverdraft: 'TempOverdraft' as FeeTypeEnum,
        UnauthorisedBorrowing: 'UnauthorisedBorrowing' as FeeTypeEnum,
        UnauthorisedPaidTrans: 'UnauthorisedPaidTrans' as FeeTypeEnum,
        Other: 'Other' as FeeTypeEnum,
        UnauthorisedUnpaidTrans: 'UnauthorisedUnpaidTrans' as FeeTypeEnum
    }
    export type MinMaxTypeEnum = 'Minimum' | 'Maximum';
    export const MinMaxTypeEnum = {
        Minimum: 'Minimum' as MinMaxTypeEnum,
        Maximum: 'Maximum' as MinMaxTypeEnum
    }
    export type CappingPeriodEnum = 'Day' | 'Half Year' | 'Month' | 'Quarter' | 'Week' | 'Year';
    export const CappingPeriodEnum = {
        Day: 'Day' as CappingPeriodEnum,
        HalfYear: 'Half Year' as CappingPeriodEnum,
        Month: 'Month' as CappingPeriodEnum,
        Quarter: 'Quarter' as CappingPeriodEnum,
        Week: 'Week' as CappingPeriodEnum,
        Year: 'Year' as CappingPeriodEnum
    }
}
