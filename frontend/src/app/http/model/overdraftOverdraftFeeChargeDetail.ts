/**
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * OpenAPI spec version: v3.1.0
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { OtherApplicationFrequency } from './otherApplicationFrequency';
import { OtherCalculationFrequency } from './otherCalculationFrequency';
import { OtherFeeRateType } from './otherFeeRateType';
import { OtherFeeType } from './otherFeeType';
import { OverdraftOverdraftFeeChargeCap } from './overdraftOverdraftFeeChargeCap';


/**
 * Details about the fees/charges
 */
export interface OverdraftOverdraftFeeChargeDetail {
    /**
     * Overdraft fee type
     */
    FeeType: OverdraftOverdraftFeeChargeDetail.FeeTypeEnum;
    /**
     * Indicates whether fee and charges are negotiable
     */
    NegotiableIndicator?: boolean;
    /**
     * Indicates if the fee/charge is already covered by an 'Overdraft Control' fee or not.
     */
    OverdraftControlIndicator?: boolean;
    /**
     * Every additional tranche of an overdraft balance to which an overdraft fee is applied
     */
    IncrementalBorrowingAmount?: string;
    /**
     * Amount charged for an overdraft fee/charge (where it is charged in terms of an amount rather than a rate)
     */
    FeeAmount?: string;
    /**
     * Rate charged for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)
     */
    FeeRate?: string;
    /**
     * Rate type for overdraft fee/charge (where it is charged in terms of a rate rather than an amount)
     */
    FeeRateType?: OverdraftOverdraftFeeChargeDetail.FeeRateTypeEnum;
    /**
     * Frequency at which the overdraft charge is applied to the account
     */
    ApplicationFrequency: OverdraftOverdraftFeeChargeDetail.ApplicationFrequencyEnum;
    /**
     * How often is the overdraft fee/charge calculated for the account.
     */
    CalculationFrequency?: OverdraftOverdraftFeeChargeDetail.CalculationFrequencyEnum;
    /**
     * Free text for capturing any other info related to Overdraft Fees Charge Details
     */
    Notes?: Array<string>;
    /**
     * Details about any caps (maximum charges) that apply to a particular fee/charge. Capping can either be based on an amount (in gbp), an amount (in items) or a rate.
     */
    OverdraftFeeChargeCap?: Array<OverdraftOverdraftFeeChargeCap>;
    OtherFeeType?: OtherFeeType;
    OtherFeeRateType?: OtherFeeRateType;
    OtherApplicationFrequency?: OtherApplicationFrequency;
    OtherCalculationFrequency?: OtherCalculationFrequency;
}
export namespace OverdraftOverdraftFeeChargeDetail {
    export type FeeTypeEnum = 'ArrangedOverdraft' | 'AnnualReview' | 'EmergencyBorrowing' | 'BorrowingItem' | 'OverdraftRenewal' | 'OverdraftSetup' | 'Surcharge' | 'TempOverdraft' | 'UnauthorisedBorrowing' | 'UnauthorisedPaidTrans' | 'Other' | 'UnauthorisedUnpaidTrans';
    export const FeeTypeEnum = {
        ArrangedOverdraft: 'ArrangedOverdraft' as FeeTypeEnum,
        AnnualReview: 'AnnualReview' as FeeTypeEnum,
        EmergencyBorrowing: 'EmergencyBorrowing' as FeeTypeEnum,
        BorrowingItem: 'BorrowingItem' as FeeTypeEnum,
        OverdraftRenewal: 'OverdraftRenewal' as FeeTypeEnum,
        OverdraftSetup: 'OverdraftSetup' as FeeTypeEnum,
        Surcharge: 'Surcharge' as FeeTypeEnum,
        TempOverdraft: 'TempOverdraft' as FeeTypeEnum,
        UnauthorisedBorrowing: 'UnauthorisedBorrowing' as FeeTypeEnum,
        UnauthorisedPaidTrans: 'UnauthorisedPaidTrans' as FeeTypeEnum,
        Other: 'Other' as FeeTypeEnum,
        UnauthorisedUnpaidTrans: 'UnauthorisedUnpaidTrans' as FeeTypeEnum
    }
    export type FeeRateTypeEnum = 'Gross' | 'Other';
    export const FeeRateTypeEnum = {
        Gross: 'Gross' as FeeRateTypeEnum,
        Other: 'Other' as FeeRateTypeEnum
    }
    export type ApplicationFrequencyEnum = 'OnClosing' | 'OnOpening' | 'ChargingPeriod' | 'Daily' | 'PerItem' | 'Monthly' | 'OnAnniversary' | 'Other' | 'PerHundredPounds' | 'PerHour' | 'PerOccurrence' | 'PerSheet' | 'PerTransaction' | 'PerTransactionAmount' | 'PerTransactionPercentage' | 'Quarterly' | 'SixMonthly' | 'StatementMonthly' | 'Weekly' | 'Yearly';
    export const ApplicationFrequencyEnum = {
        OnClosing: 'OnClosing' as ApplicationFrequencyEnum,
        OnOpening: 'OnOpening' as ApplicationFrequencyEnum,
        ChargingPeriod: 'ChargingPeriod' as ApplicationFrequencyEnum,
        Daily: 'Daily' as ApplicationFrequencyEnum,
        PerItem: 'PerItem' as ApplicationFrequencyEnum,
        Monthly: 'Monthly' as ApplicationFrequencyEnum,
        OnAnniversary: 'OnAnniversary' as ApplicationFrequencyEnum,
        Other: 'Other' as ApplicationFrequencyEnum,
        PerHundredPounds: 'PerHundredPounds' as ApplicationFrequencyEnum,
        PerHour: 'PerHour' as ApplicationFrequencyEnum,
        PerOccurrence: 'PerOccurrence' as ApplicationFrequencyEnum,
        PerSheet: 'PerSheet' as ApplicationFrequencyEnum,
        PerTransaction: 'PerTransaction' as ApplicationFrequencyEnum,
        PerTransactionAmount: 'PerTransactionAmount' as ApplicationFrequencyEnum,
        PerTransactionPercentage: 'PerTransactionPercentage' as ApplicationFrequencyEnum,
        Quarterly: 'Quarterly' as ApplicationFrequencyEnum,
        SixMonthly: 'SixMonthly' as ApplicationFrequencyEnum,
        StatementMonthly: 'StatementMonthly' as ApplicationFrequencyEnum,
        Weekly: 'Weekly' as ApplicationFrequencyEnum,
        Yearly: 'Yearly' as ApplicationFrequencyEnum
    }
    export type CalculationFrequencyEnum = 'OnClosing' | 'OnOpening' | 'ChargingPeriod' | 'Daily' | 'PerItem' | 'Monthly' | 'OnAnniversary' | 'Other' | 'PerHundredPounds' | 'PerHour' | 'PerOccurrence' | 'PerSheet' | 'PerTransaction' | 'PerTransactionAmount' | 'PerTransactionPercentage' | 'Quarterly' | 'SixMonthly' | 'StatementMonthly' | 'Weekly' | 'Yearly';
    export const CalculationFrequencyEnum = {
        OnClosing: 'OnClosing' as CalculationFrequencyEnum,
        OnOpening: 'OnOpening' as CalculationFrequencyEnum,
        ChargingPeriod: 'ChargingPeriod' as CalculationFrequencyEnum,
        Daily: 'Daily' as CalculationFrequencyEnum,
        PerItem: 'PerItem' as CalculationFrequencyEnum,
        Monthly: 'Monthly' as CalculationFrequencyEnum,
        OnAnniversary: 'OnAnniversary' as CalculationFrequencyEnum,
        Other: 'Other' as CalculationFrequencyEnum,
        PerHundredPounds: 'PerHundredPounds' as CalculationFrequencyEnum,
        PerHour: 'PerHour' as CalculationFrequencyEnum,
        PerOccurrence: 'PerOccurrence' as CalculationFrequencyEnum,
        PerSheet: 'PerSheet' as CalculationFrequencyEnum,
        PerTransaction: 'PerTransaction' as CalculationFrequencyEnum,
        PerTransactionAmount: 'PerTransactionAmount' as CalculationFrequencyEnum,
        PerTransactionPercentage: 'PerTransactionPercentage' as CalculationFrequencyEnum,
        Quarterly: 'Quarterly' as CalculationFrequencyEnum,
        SixMonthly: 'SixMonthly' as CalculationFrequencyEnum,
        StatementMonthly: 'StatementMonthly' as CalculationFrequencyEnum,
        Weekly: 'Weekly' as CalculationFrequencyEnum,
        Yearly: 'Yearly' as CalculationFrequencyEnum
    }
}
